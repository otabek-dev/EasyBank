// <auto-generated />
using System;
using EasyBank.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EasyBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230914043445_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7463dd7d-3f76-4ffc-b6be-04ec339607c0"),
                            CardNumber = "3486-709562-87461",
                            CustomerId = new Guid("dcc390fe-7233-4ba8-9aff-a2fa9f511b50"),
                            IsBlocked = false,
                            PinCode = "438"
                        },
                        new
                        {
                            Id = new Guid("3ae0a6f0-c46e-463c-9f65-db64c24db4f0"),
                            CardNumber = "6759-9019-1414-0636",
                            CustomerId = new Guid("6a70dca6-4e81-4bfb-a763-7d088ca3f405"),
                            IsBlocked = false,
                            PinCode = "312"
                        },
                        new
                        {
                            Id = new Guid("2782eb2e-4744-49ff-8e17-9d707dfdfad8"),
                            CardNumber = "5893124714867052821",
                            CustomerId = new Guid("1d060d87-1651-4019-8120-a9cdbcad4e50"),
                            IsBlocked = false,
                            PinCode = "244"
                        },
                        new
                        {
                            Id = new Guid("a897bbf1-9907-4b30-a820-a856349b897d"),
                            CardNumber = "6709794349045873164",
                            CustomerId = new Guid("19afa6e8-5b3b-4457-b20e-59a9e34190cd"),
                            IsBlocked = false,
                            PinCode = "214"
                        },
                        new
                        {
                            Id = new Guid("bac48d99-713b-4b95-baec-c12380733df2"),
                            CardNumber = "6767-3351-7440-4774-512",
                            CustomerId = new Guid("6bcc84a8-c021-4f9f-b547-b68dd5656403"),
                            IsBlocked = false,
                            PinCode = "141"
                        },
                        new
                        {
                            Id = new Guid("3bd039d9-f447-4a95-99f5-82fef8e4392e"),
                            CardNumber = "5893-7297-5155-6500",
                            CustomerId = new Guid("8d322838-0270-45c9-b40b-8c18424aa519"),
                            IsBlocked = false,
                            PinCode = "906"
                        },
                        new
                        {
                            Id = new Guid("bb629707-3bfe-4472-b149-3555656716d8"),
                            CardNumber = "3491-713085-04280",
                            CustomerId = new Guid("f17ec1e2-1759-48bd-9090-e6bca65c1883"),
                            IsBlocked = false,
                            PinCode = "529"
                        },
                        new
                        {
                            Id = new Guid("df673b2d-8ca1-4717-9380-070e10be37f3"),
                            CardNumber = "6706601664241194382",
                            CustomerId = new Guid("fea4c48e-d307-4e88-8fcf-7f57c3600f9e"),
                            IsBlocked = false,
                            PinCode = "180"
                        },
                        new
                        {
                            Id = new Guid("cc0b6314-af99-4bba-bb3a-e53c034c7204"),
                            CardNumber = "4701925153461",
                            CustomerId = new Guid("2841872a-1f16-41b1-8c70-9ec728baf976"),
                            IsBlocked = false,
                            PinCode = "982"
                        },
                        new
                        {
                            Id = new Guid("61cd3c7e-260d-40b2-96a1-6a5e649035ae"),
                            CardNumber = "6370-1409-2745-9944",
                            CustomerId = new Guid("eca0bc65-c40d-4e05-a744-c74fce8cb9a6"),
                            IsBlocked = false,
                            PinCode = "386"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dcc390fe-7233-4ba8-9aff-a2fa9f511b50"),
                            Address = "403.217.3445",
                            FullName = "Dale Dare"
                        },
                        new
                        {
                            Id = new Guid("6a70dca6-4e81-4bfb-a763-7d088ca3f405"),
                            Address = "(632) 767-2020 x7497",
                            FullName = "Leigh Dicki"
                        },
                        new
                        {
                            Id = new Guid("1d060d87-1651-4019-8120-a9cdbcad4e50"),
                            Address = "795-859-7679",
                            FullName = "Joey Connelly"
                        },
                        new
                        {
                            Id = new Guid("19afa6e8-5b3b-4457-b20e-59a9e34190cd"),
                            Address = "314-248-3458 x3514",
                            FullName = "Carlton Anderson"
                        },
                        new
                        {
                            Id = new Guid("6bcc84a8-c021-4f9f-b547-b68dd5656403"),
                            Address = "1-929-562-5347",
                            FullName = "Sarah Daugherty"
                        },
                        new
                        {
                            Id = new Guid("8d322838-0270-45c9-b40b-8c18424aa519"),
                            Address = "(832) 796-8968 x17447",
                            FullName = "Benjamin Weber"
                        },
                        new
                        {
                            Id = new Guid("f17ec1e2-1759-48bd-9090-e6bca65c1883"),
                            Address = "796-757-1539 x27721",
                            FullName = "Corey Flatley"
                        },
                        new
                        {
                            Id = new Guid("fea4c48e-d307-4e88-8fcf-7f57c3600f9e"),
                            Address = "(439) 322-3085 x52714",
                            FullName = "Vincent McDermott"
                        },
                        new
                        {
                            Id = new Guid("2841872a-1f16-41b1-8c70-9ec728baf976"),
                            Address = "847-637-6551",
                            FullName = "Fannie Legros"
                        },
                        new
                        {
                            Id = new Guid("eca0bc65-c40d-4e05-a744-c74fce8cb9a6"),
                            Address = "929-932-1755 x16257",
                            FullName = "Shelly Kassulke"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("adbf277a-3c40-47dc-9425-081e8cb2563a"),
                            Email = "otabek.pro@hotmail.com",
                            FullName = "Otabek Rustamov",
                            Password = "123123123",
                            Phone = "1-364-246-6467",
                            Position = "Developer",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("1f6b0a86-084d-4d9f-8417-3dc506273fab"),
                            Email = "Theodore.Turcotte37@hotmail.com",
                            FullName = "Theodore Turcotte",
                            Password = "123123123",
                            Phone = "857-768-5449",
                            Position = "hr",
                            Role = "Employee"
                        },
                        new
                        {
                            Id = new Guid("7def9946-13a0-4a60-8fe2-164cf45a14ab"),
                            Email = "Melanie40@hotmail.com",
                            FullName = "Melanie O'Reilly",
                            Password = "123123123",
                            Phone = "(649) 773-2186 x0401",
                            Position = "security",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("2763740f-ed19-432d-84c8-bd8caf6735d0"),
                            Email = "Jonathon.Durgan@gmail.com",
                            FullName = "Jonathon Durgan",
                            Password = "123123123",
                            Phone = "1-234-792-5593 x25195",
                            Position = "developer",
                            Role = "Employee"
                        },
                        new
                        {
                            Id = new Guid("1e42e661-1530-4326-bdf1-46b1b48fd2da"),
                            Email = "Francisco.Lynch50@hotmail.com",
                            FullName = "Francisco Lynch",
                            Password = "123123123",
                            Phone = "555-872-5080 x8993",
                            Position = "cook",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("4f6787d8-0be7-4a23-9200-de90b2265cfc"),
                            Email = "Delbert_Schiller@hotmail.com",
                            FullName = "Delbert Schiller",
                            Password = "123123123",
                            Phone = "(429) 875-2648",
                            Position = "developer",
                            Role = "Director"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("OperationDescription")
                        .HasColumnType("integer");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("EasyBank.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.HasOne("EasyBank.Models.Customer", "Customer")
                        .WithMany("Cards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.HasOne("EasyBank.Models.Card", null)
                        .WithMany("CardHistory")
                        .HasForeignKey("CardId");

                    b.HasOne("EasyBank.Models.Customer", null)
                        .WithMany("CustomerHistory")
                        .HasForeignKey("CustomerId");

                    b.HasOne("EasyBank.Models.Employee", "Employee")
                        .WithMany("History")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Navigation("CardHistory");
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("CustomerHistory");
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
