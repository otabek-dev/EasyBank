// <auto-generated />
using System;
using EasyBank.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230908044813_AddedCustomerAndCardAndHistory")]
    partial class AddedCustomerAndCardAndHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bacc402-c4cc-4415-b4ab-100b4e0b33db"),
                            CardNumber = "6771-8915-4877-1803",
                            CustomerId = new Guid("d13a851a-e094-4b76-a494-e7795e6b0cec"),
                            IsBlocked = false,
                            PinCode = "675"
                        },
                        new
                        {
                            Id = new Guid("a3c809b4-80b7-4040-8acd-c1819a7893f5"),
                            CardNumber = "4612-2967-7275-7353",
                            CustomerId = new Guid("a9033a24-54c2-4520-b3b1-f35ac0470d0e"),
                            IsBlocked = false,
                            PinCode = "592"
                        },
                        new
                        {
                            Id = new Guid("a0249b8a-e523-4c54-816b-ea62c9178ed4"),
                            CardNumber = "5407-2513-2231-6917",
                            CustomerId = new Guid("f55e69b1-2d88-4214-a4a5-edad6f9c1540"),
                            IsBlocked = false,
                            PinCode = "994"
                        },
                        new
                        {
                            Id = new Guid("8a4a78f5-09b7-47c9-8a8f-066322131e57"),
                            CardNumber = "5893-6364-8174-2146",
                            CustomerId = new Guid("6513f33e-a2a5-4ae1-992d-d7916523ae06"),
                            IsBlocked = false,
                            PinCode = "846"
                        },
                        new
                        {
                            Id = new Guid("f821b06e-53c8-4d61-a282-7c0dea1a106f"),
                            CardNumber = "5143-9734-7718-2377",
                            CustomerId = new Guid("615367fd-5ac9-4c78-91ff-fe0e8596f6da"),
                            IsBlocked = false,
                            PinCode = "757"
                        },
                        new
                        {
                            Id = new Guid("20ee6c3b-9dca-48ec-a21f-797ddcd25bcf"),
                            CardNumber = "6371-8899-0118-1226",
                            CustomerId = new Guid("35dedcf4-2f4e-44a1-8848-5530e8c9da79"),
                            IsBlocked = false,
                            PinCode = "109"
                        },
                        new
                        {
                            Id = new Guid("f3afa419-bd14-4f71-bef2-3e2a9e5eeb2c"),
                            CardNumber = "589378351974133830",
                            CustomerId = new Guid("1bd44c6f-52c9-4de6-83e5-b612f5f25509"),
                            IsBlocked = false,
                            PinCode = "029"
                        },
                        new
                        {
                            Id = new Guid("bae60921-c35a-4731-83ba-75687ff80155"),
                            CardNumber = "6578-6201-0025-3068-8356",
                            CustomerId = new Guid("970cfb8a-e08f-4fd8-be3e-37b0f322cdd1"),
                            IsBlocked = false,
                            PinCode = "911"
                        },
                        new
                        {
                            Id = new Guid("96669f09-ae96-4704-b437-95668c6e5287"),
                            CardNumber = "3528-0943-4711-9042",
                            CustomerId = new Guid("454101b6-c56a-440a-8e49-eeb3b8fdd3fc"),
                            IsBlocked = false,
                            PinCode = "224"
                        },
                        new
                        {
                            Id = new Guid("2c729442-8ca9-4fa8-b4ff-bdb5ac8807b2"),
                            CardNumber = "6521-6263-5238-5051-1202",
                            CustomerId = new Guid("f09b93c9-b778-42e5-9d51-e787489dbb59"),
                            IsBlocked = false,
                            PinCode = "690"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d13a851a-e094-4b76-a494-e7795e6b0cec"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("a9033a24-54c2-4520-b3b1-f35ac0470d0e"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("f55e69b1-2d88-4214-a4a5-edad6f9c1540"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("6513f33e-a2a5-4ae1-992d-d7916523ae06"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("615367fd-5ac9-4c78-91ff-fe0e8596f6da"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("35dedcf4-2f4e-44a1-8848-5530e8c9da79"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("1bd44c6f-52c9-4de6-83e5-b612f5f25509"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("970cfb8a-e08f-4fd8-be3e-37b0f322cdd1"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("454101b6-c56a-440a-8e49-eeb3b8fdd3fc"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        },
                        new
                        {
                            Id = new Guid("f09b93c9-b778-42e5-9d51-e787489dbb59"),
                            Address = "325-448-6608 x327",
                            FullName = "Johnny Cole"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a06a0d1-806b-424c-8501-512836409990"),
                            Email = "otabek.pro@hotmail.com",
                            FullName = "Otabek Rustamov",
                            Password = "123123123",
                            Phone = "325-448-6608 x327",
                            Position = "Developer",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("535ac877-0565-4a9c-b130-946f04d2ac69"),
                            Email = "Johnny47@yahoo.com",
                            FullName = "Johnny Cole",
                            Password = "123123123",
                            Phone = "325-448-6608 x327",
                            Position = "cook",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("a89581ac-174c-4363-9e80-6685ec2f9ca7"),
                            Email = "Johnny47@yahoo.com",
                            FullName = "Johnny Cole",
                            Password = "123123123",
                            Phone = "325-448-6608 x327",
                            Position = "hr",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("4ee170b5-3f25-4319-9a13-78d1b4c5b6b9"),
                            Email = "Johnny47@yahoo.com",
                            FullName = "Johnny Cole",
                            Password = "123123123",
                            Phone = "325-448-6608 x327",
                            Position = "cook",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("f2bfa10a-7947-47c7-afbb-7e03db9a05aa"),
                            Email = "Johnny47@yahoo.com",
                            FullName = "Johnny Cole",
                            Password = "123123123",
                            Phone = "325-448-6608 x327",
                            Position = "hr",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("d85fa081-d9fb-4260-87d2-f23231d75336"),
                            Email = "Johnny47@yahoo.com",
                            FullName = "Johnny Cole",
                            Password = "123123123",
                            Phone = "325-448-6608 x327",
                            Position = "security",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CustomerId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.HasOne("EasyBank.Models.Customer", "Customer")
                        .WithMany("Cards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.HasOne("EasyBank.Models.Card", "Card")
                        .WithMany("CardHistory")
                        .HasForeignKey("CardId");

                    b.HasOne("EasyBank.Models.Customer", "Customer")
                        .WithMany("CustomerHistory")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Card");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Navigation("CardHistory");
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("CustomerHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
