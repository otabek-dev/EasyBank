// <auto-generated />
using System;
using EasyBank.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EasyBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230915055758_UpdatedModelsDeletedUnnecessaryHistorys")]
    partial class UpdatedModelsDeletedUnnecessaryHistorys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e574de62-8f33-4e98-9e3b-cefdbf6fc089"),
                            CardNumber = "3528-0984-9614-0261",
                            CustomerId = new Guid("c3415adc-b709-4358-832b-a45ceca3b2e3"),
                            IsBlocked = false,
                            PinCode = "681"
                        },
                        new
                        {
                            Id = new Guid("c2859a0e-caf7-40cc-9ffb-143f707dc122"),
                            CardNumber = "6376-4264-2188-6904",
                            CustomerId = new Guid("349b38e8-e849-45cb-a176-721782198e5e"),
                            IsBlocked = false,
                            PinCode = "874"
                        },
                        new
                        {
                            Id = new Guid("7c19902d-ccc2-4ffa-abbd-2e1ea574a9d9"),
                            CardNumber = "5893571149843871",
                            CustomerId = new Guid("3e774720-bbe2-48a2-bdd0-a90679f16dd0"),
                            IsBlocked = false,
                            PinCode = "707"
                        },
                        new
                        {
                            Id = new Guid("9a4dd4b7-c655-4867-845a-6bba3d74ba05"),
                            CardNumber = "3529-4963-9555-2298",
                            CustomerId = new Guid("4a5f5d2d-7da3-4af8-bae3-b2d8b590a1e4"),
                            IsBlocked = false,
                            PinCode = "586"
                        },
                        new
                        {
                            Id = new Guid("fd942634-be23-42e0-91c6-b405bf40ccca"),
                            CardNumber = "3415-929671-84833",
                            CustomerId = new Guid("40398b13-8282-4e8c-9e43-69b823cfbacd"),
                            IsBlocked = false,
                            PinCode = "792"
                        },
                        new
                        {
                            Id = new Guid("ad48eda5-e7b0-420d-babd-179b1e648abe"),
                            CardNumber = "6709591577588526865",
                            CustomerId = new Guid("2716d91f-7a75-4898-921c-946780e3b87e"),
                            IsBlocked = false,
                            PinCode = "498"
                        },
                        new
                        {
                            Id = new Guid("870b1254-e4d7-4274-a4d3-1debd1913deb"),
                            CardNumber = "6763-1729-8504-3174",
                            CustomerId = new Guid("13e4600b-f4da-4296-8dac-4cecadf92997"),
                            IsBlocked = false,
                            PinCode = "175"
                        },
                        new
                        {
                            Id = new Guid("2af94105-227c-4128-90bb-1923fdb067bc"),
                            CardNumber = "5324-0560-5408-9412",
                            CustomerId = new Guid("4c78d4db-ad66-4c36-8f5c-b0ecd4f49d84"),
                            IsBlocked = false,
                            PinCode = "677"
                        },
                        new
                        {
                            Id = new Guid("aba53ab7-dde1-4cce-83ff-e9b5fefe38e9"),
                            CardNumber = "6380-2441-5825-2438",
                            CustomerId = new Guid("8e75eb7d-46fd-4d63-85fd-42ebfaff3529"),
                            IsBlocked = false,
                            PinCode = "309"
                        },
                        new
                        {
                            Id = new Guid("e7405a5b-8040-41ea-9399-740dfb6f89fa"),
                            CardNumber = "3556-2936-2649-1206",
                            CustomerId = new Guid("0916b01d-8c68-444d-93f2-337903498924"),
                            IsBlocked = false,
                            PinCode = "409"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3415adc-b709-4358-832b-a45ceca3b2e3"),
                            Address = "(667) 405-8095 x85917",
                            FullName = "Guillermo Braun"
                        },
                        new
                        {
                            Id = new Guid("349b38e8-e849-45cb-a176-721782198e5e"),
                            Address = "1-464-375-8534",
                            FullName = "Katrina Roob"
                        },
                        new
                        {
                            Id = new Guid("3e774720-bbe2-48a2-bdd0-a90679f16dd0"),
                            Address = "260-871-2757 x4499",
                            FullName = "Hannah McDermott"
                        },
                        new
                        {
                            Id = new Guid("4a5f5d2d-7da3-4af8-bae3-b2d8b590a1e4"),
                            Address = "1-260-740-0442 x43346",
                            FullName = "Gabriel Abbott"
                        },
                        new
                        {
                            Id = new Guid("40398b13-8282-4e8c-9e43-69b823cfbacd"),
                            Address = "1-477-312-0879 x639",
                            FullName = "Erick Kling"
                        },
                        new
                        {
                            Id = new Guid("2716d91f-7a75-4898-921c-946780e3b87e"),
                            Address = "(517) 770-1369",
                            FullName = "Jackie Russel"
                        },
                        new
                        {
                            Id = new Guid("13e4600b-f4da-4296-8dac-4cecadf92997"),
                            Address = "644.618.6464",
                            FullName = "Toni Treutel"
                        },
                        new
                        {
                            Id = new Guid("4c78d4db-ad66-4c36-8f5c-b0ecd4f49d84"),
                            Address = "(568) 671-7714",
                            FullName = "Claire Brakus"
                        },
                        new
                        {
                            Id = new Guid("8e75eb7d-46fd-4d63-85fd-42ebfaff3529"),
                            Address = "341-668-8620 x74750",
                            FullName = "Marion Cormier"
                        },
                        new
                        {
                            Id = new Guid("0916b01d-8c68-444d-93f2-337903498924"),
                            Address = "1-350-509-4987 x52714",
                            FullName = "Jake Padberg"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19e13792-b24b-4e0f-a11a-859c9fc3f7c5"),
                            Email = "otabek.pro@hotmail.com",
                            FullName = "Otabek Rustamov",
                            Password = "123123123",
                            Phone = "267.872.7343 x723",
                            Position = "Developer",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6a2710b5-8739-4233-97b8-08bf0fe6a5a9"),
                            Email = "Cedric_Jones@hotmail.com",
                            FullName = "Cedric Jones",
                            Password = "123123123",
                            Phone = "852.376.3689 x0759",
                            Position = "cook",
                            Role = "Employee"
                        },
                        new
                        {
                            Id = new Guid("0911cc26-92b7-402e-851a-2945a9a6a1fe"),
                            Email = "Alan.Jacobi@gmail.com",
                            FullName = "Alan Jacobi",
                            Password = "123123123",
                            Phone = "1-880-271-9256",
                            Position = "cook",
                            Role = "Employee"
                        },
                        new
                        {
                            Id = new Guid("d775f81d-7374-4e9f-8427-2538507b0241"),
                            Email = "Miriam43@hotmail.com",
                            FullName = "Miriam Moen",
                            Password = "123123123",
                            Phone = "(879) 761-5390",
                            Position = "cook",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("cf0a1bf9-0e54-4616-959a-161dc1174888"),
                            Email = "Marguerite_Jacobs64@yahoo.com",
                            FullName = "Marguerite Jacobs",
                            Password = "123123123",
                            Phone = "364.936.8272 x34538",
                            Position = "hr",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("eb484c13-3a38-41dd-80ea-c49bb9a5ed2a"),
                            Email = "Vickie_Greenfelder34@yahoo.com",
                            FullName = "Vickie Greenfelder",
                            Password = "123123123",
                            Phone = "1-270-444-6993",
                            Position = "security",
                            Role = "Director"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("OperationDescription")
                        .HasColumnType("integer");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("EasyBank.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.HasOne("EasyBank.Models.Customer", "Customer")
                        .WithMany("Cards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.HasOne("EasyBank.Models.Employee", "Employee")
                        .WithMany("History")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
