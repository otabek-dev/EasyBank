// <auto-generated />
using System;
using EasyBank.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230911121619_AddedRefreshTokens")]
    partial class AddedRefreshTokens
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3cd6011-640a-4fa2-848b-0877c4671f10"),
                            CardNumber = "3635-964551-9495",
                            CustomerId = new Guid("f85c9430-e027-4d7a-9978-1e9eedba21a8"),
                            IsBlocked = false,
                            PinCode = "912"
                        },
                        new
                        {
                            Id = new Guid("5351d3de-0023-423f-aa61-ac9c3a5c3d37"),
                            CardNumber = "3542-7538-9690-4037",
                            CustomerId = new Guid("d56ee317-2c0b-467b-adca-430aead0230d"),
                            IsBlocked = false,
                            PinCode = "588"
                        },
                        new
                        {
                            Id = new Guid("95239a29-80e9-4af5-90b2-f91a2f59d825"),
                            CardNumber = "6387-7868-6679-1977",
                            CustomerId = new Guid("64a297a4-ca1b-4dd5-bf34-ed06822f0fda"),
                            IsBlocked = false,
                            PinCode = "116"
                        },
                        new
                        {
                            Id = new Guid("0c1e7323-1c06-4580-933f-3f91f2bc2af1"),
                            CardNumber = "5038-8226-9852-9031",
                            CustomerId = new Guid("9bc7b509-b7bf-456e-ae60-a6f1ed86901f"),
                            IsBlocked = false,
                            PinCode = "874"
                        },
                        new
                        {
                            Id = new Guid("365d3e7f-f509-49f1-92be-b270dade2943"),
                            CardNumber = "4432-7195-9505-2478",
                            CustomerId = new Guid("40d2d041-10a1-42e1-aa81-6278272411f1"),
                            IsBlocked = false,
                            PinCode = "991"
                        },
                        new
                        {
                            Id = new Guid("66396780-1bd7-4ca9-8d64-15ce9084f70e"),
                            CardNumber = "3054-947317-8887",
                            CustomerId = new Guid("853cac5e-7d3a-4f35-8909-7a3ed5f87603"),
                            IsBlocked = false,
                            PinCode = "900"
                        },
                        new
                        {
                            Id = new Guid("ee6bbf72-3fef-4958-94d9-279bf062614c"),
                            CardNumber = "6759-6919-5946-7026-155",
                            CustomerId = new Guid("51e4e254-5a26-47fe-95db-2fdb4905b952"),
                            IsBlocked = false,
                            PinCode = "690"
                        },
                        new
                        {
                            Id = new Guid("57195153-14eb-44b1-8dc3-43220a319808"),
                            CardNumber = "6706196891326241",
                            CustomerId = new Guid("0a4ff21e-ff7c-4eeb-ba53-dfede6387a75"),
                            IsBlocked = false,
                            PinCode = "296"
                        },
                        new
                        {
                            Id = new Guid("a5baad50-bf91-4174-91f6-7762c470996c"),
                            CardNumber = "3702-966391-55528",
                            CustomerId = new Guid("6fd50aee-7bc2-41d8-91dc-0545951f8339"),
                            IsBlocked = false,
                            PinCode = "340"
                        },
                        new
                        {
                            Id = new Guid("001a9e40-2e2b-43c0-875f-07f8f1e315dc"),
                            CardNumber = "6379-4415-5537-5571",
                            CustomerId = new Guid("a5fa41d1-58df-4523-a8a1-9d968f488428"),
                            IsBlocked = false,
                            PinCode = "860"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f85c9430-e027-4d7a-9978-1e9eedba21a8"),
                            Address = "(970) 926-8684 x67123",
                            FullName = "Clifford Wehner"
                        },
                        new
                        {
                            Id = new Guid("d56ee317-2c0b-467b-adca-430aead0230d"),
                            Address = "691-737-6611",
                            FullName = "Christie Stokes"
                        },
                        new
                        {
                            Id = new Guid("64a297a4-ca1b-4dd5-bf34-ed06822f0fda"),
                            Address = "758.786.0436 x3798",
                            FullName = "Joseph Kiehn"
                        },
                        new
                        {
                            Id = new Guid("9bc7b509-b7bf-456e-ae60-a6f1ed86901f"),
                            Address = "(448) 260-3708 x71042",
                            FullName = "Sandy Lehner"
                        },
                        new
                        {
                            Id = new Guid("40d2d041-10a1-42e1-aa81-6278272411f1"),
                            Address = "(801) 946-7295 x98272",
                            FullName = "Melody Okuneva"
                        },
                        new
                        {
                            Id = new Guid("853cac5e-7d3a-4f35-8909-7a3ed5f87603"),
                            Address = "551-889-9225 x049",
                            FullName = "Cora Keeling"
                        },
                        new
                        {
                            Id = new Guid("51e4e254-5a26-47fe-95db-2fdb4905b952"),
                            Address = "1-323-582-1328 x1464",
                            FullName = "Alan Wiegand"
                        },
                        new
                        {
                            Id = new Guid("0a4ff21e-ff7c-4eeb-ba53-dfede6387a75"),
                            Address = "1-851-647-0551 x3225",
                            FullName = "Raquel Kemmer"
                        },
                        new
                        {
                            Id = new Guid("6fd50aee-7bc2-41d8-91dc-0545951f8339"),
                            Address = "756.981.7431 x850",
                            FullName = "Ralph Hintz"
                        },
                        new
                        {
                            Id = new Guid("a5fa41d1-58df-4523-a8a1-9d968f488428"),
                            Address = "(771) 344-2897",
                            FullName = "Cedric O'Keefe"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7210738-5773-4974-b10e-6b3015e07335"),
                            Email = "otabek.pro@hotmail.com",
                            FullName = "Otabek Rustamov",
                            Password = "123123123",
                            Phone = "403.793.9706",
                            Position = "Developer",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("93249b5e-679f-473a-85c6-e5f9b192003f"),
                            Email = "Jeremiah_Bradtke@gmail.com",
                            FullName = "Jeremiah Bradtke",
                            Password = "123123123",
                            Phone = "800-841-7700 x7157",
                            Position = "cook",
                            Role = "Employee"
                        },
                        new
                        {
                            Id = new Guid("373df8ad-d11d-460f-9c96-6a0d8b73eec3"),
                            Email = "Sue_Rutherford9@gmail.com",
                            FullName = "Sue Rutherford",
                            Password = "123123123",
                            Phone = "1-695-867-8294 x33812",
                            Position = "cook",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("3d571baf-4203-43d7-95b3-ff5506f4f6b2"),
                            Email = "Roger23@gmail.com",
                            FullName = "Roger Littel",
                            Password = "123123123",
                            Phone = "1-428-454-2228",
                            Position = "security",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("eaded916-695a-446e-ac88-edb770589bef"),
                            Email = "Sara_Kessler54@yahoo.com",
                            FullName = "Sara Kessler",
                            Password = "123123123",
                            Phone = "220-259-7151 x0874",
                            Position = "security",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("78549e86-3681-4c02-a29f-49d0c3f75d95"),
                            Email = "Erika_Kreiger@yahoo.com",
                            FullName = "Erika Kreiger",
                            Password = "123123123",
                            Phone = "1-593-487-4661",
                            Position = "developer",
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OperationDescription")
                        .HasColumnType("int");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("EasyBank.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.HasOne("EasyBank.Models.Customer", "Customer")
                        .WithMany("Cards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.HasOne("EasyBank.Models.Card", null)
                        .WithMany("CardHistory")
                        .HasForeignKey("CardId");

                    b.HasOne("EasyBank.Models.Customer", null)
                        .WithMany("CustomerHistory")
                        .HasForeignKey("CustomerId");

                    b.HasOne("EasyBank.Models.Employee", "Employee")
                        .WithMany("History")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Navigation("CardHistory");
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("CustomerHistory");
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
