// <auto-generated />
using System;
using EasyBank.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230911055521_AddedEnumsOperationForHistory")]
    partial class AddedEnumsOperationForHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bb4ae49-3891-43c5-b3d2-e5d2b3388411"),
                            CardNumber = "6706903614536273",
                            CustomerId = new Guid("10b2cc5e-c079-439a-abe6-397e182248cd"),
                            IsBlocked = false,
                            PinCode = "211"
                        },
                        new
                        {
                            Id = new Guid("2fa9bbd6-47d1-440e-a316-2ea7d894545e"),
                            CardNumber = "6767-1915-9102-0521",
                            CustomerId = new Guid("6dfe28f4-f4bf-48ad-a98e-19299dd89658"),
                            IsBlocked = false,
                            PinCode = "604"
                        },
                        new
                        {
                            Id = new Guid("eec43b6b-ed0f-41b4-85ad-d82d2fd4ffe0"),
                            CardNumber = "6383-5225-2908-4854",
                            CustomerId = new Guid("0afe3a22-6d33-4d71-91c8-366af31ab4e9"),
                            IsBlocked = false,
                            PinCode = "173"
                        },
                        new
                        {
                            Id = new Guid("06e389e9-7890-42d5-bb65-26aed1344a57"),
                            CardNumber = "3529-2448-9732-9132",
                            CustomerId = new Guid("2f99bd73-d693-4d9e-9052-6e36d974630e"),
                            IsBlocked = false,
                            PinCode = "652"
                        },
                        new
                        {
                            Id = new Guid("2e161efb-9a8d-4b9a-b75a-2466ffe3211a"),
                            CardNumber = "3528-8021-3983-5744",
                            CustomerId = new Guid("53906d01-5a9a-4907-83e7-4a95a5115dbb"),
                            IsBlocked = false,
                            PinCode = "011"
                        },
                        new
                        {
                            Id = new Guid("ee2a08b3-139c-44a9-b274-b68b2f465342"),
                            CardNumber = "6771347039560981",
                            CustomerId = new Guid("db17d82f-ae8b-4baf-a7de-c96ddf223fb4"),
                            IsBlocked = false,
                            PinCode = "349"
                        },
                        new
                        {
                            Id = new Guid("92092a80-5af7-44ce-80dc-fdad92a4467d"),
                            CardNumber = "6767-6520-2921-4091-868",
                            CustomerId = new Guid("e86bb06e-27f6-4670-b194-77ba704f05cc"),
                            IsBlocked = false,
                            PinCode = "868"
                        },
                        new
                        {
                            Id = new Guid("f07d7e34-1f3f-45a5-b05f-8cc0f6246da4"),
                            CardNumber = "5893419175184309",
                            CustomerId = new Guid("4d277fc9-c446-4fd6-b5d8-8383a11bb19d"),
                            IsBlocked = false,
                            PinCode = "072"
                        },
                        new
                        {
                            Id = new Guid("81eeba88-591b-423a-9aca-658207313bd9"),
                            CardNumber = "6759-6376-1600-0677-848",
                            CustomerId = new Guid("994f6da7-487c-4e57-9e13-f850b6f593a4"),
                            IsBlocked = false,
                            PinCode = "307"
                        },
                        new
                        {
                            Id = new Guid("6a31d8df-9622-4df3-96dc-b19526e25996"),
                            CardNumber = "3420-130771-85551",
                            CustomerId = new Guid("fac1f91b-22f5-428d-ac17-4bf73679bf19"),
                            IsBlocked = false,
                            PinCode = "349"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10b2cc5e-c079-439a-abe6-397e182248cd"),
                            Address = "(463) 258-9623",
                            FullName = "Juanita Denesik"
                        },
                        new
                        {
                            Id = new Guid("6dfe28f4-f4bf-48ad-a98e-19299dd89658"),
                            Address = "(601) 423-4723 x350",
                            FullName = "Joey Parker"
                        },
                        new
                        {
                            Id = new Guid("0afe3a22-6d33-4d71-91c8-366af31ab4e9"),
                            Address = "991-708-0343 x48933",
                            FullName = "Essie Dare"
                        },
                        new
                        {
                            Id = new Guid("2f99bd73-d693-4d9e-9052-6e36d974630e"),
                            Address = "(221) 724-4357",
                            FullName = "Edmond Bernhard"
                        },
                        new
                        {
                            Id = new Guid("53906d01-5a9a-4907-83e7-4a95a5115dbb"),
                            Address = "827-507-0953 x8772",
                            FullName = "Cathy Lynch"
                        },
                        new
                        {
                            Id = new Guid("db17d82f-ae8b-4baf-a7de-c96ddf223fb4"),
                            Address = "358-299-7851",
                            FullName = "Elsa Williamson"
                        },
                        new
                        {
                            Id = new Guid("e86bb06e-27f6-4670-b194-77ba704f05cc"),
                            Address = "387.659.4261 x3635",
                            FullName = "Gayle Lueilwitz"
                        },
                        new
                        {
                            Id = new Guid("4d277fc9-c446-4fd6-b5d8-8383a11bb19d"),
                            Address = "342-935-0550 x05062",
                            FullName = "Omar Schaefer"
                        },
                        new
                        {
                            Id = new Guid("994f6da7-487c-4e57-9e13-f850b6f593a4"),
                            Address = "785-591-3029 x28067",
                            FullName = "Pearl Berge"
                        },
                        new
                        {
                            Id = new Guid("fac1f91b-22f5-428d-ac17-4bf73679bf19"),
                            Address = "346.559.7907 x10457",
                            FullName = "Nathan Bednar"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7cda62f9-c7f0-41a4-ac2f-378a0fc88cfa"),
                            Email = "otabek.pro@hotmail.com",
                            FullName = "Otabek Rustamov",
                            Password = "123123123",
                            Phone = "785.749.0471 x1237",
                            Position = "Developer",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("a8aa50b3-0fdb-4831-bc09-3d853ff6615e"),
                            Email = "Mona_Crooks47@yahoo.com",
                            FullName = "Mona Crooks",
                            Password = "123123123",
                            Phone = "598-463-4477",
                            Position = "security",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("bca66b27-fdd9-4df1-8669-b7d50a0dbd6f"),
                            Email = "Sam.Bergstrom65@yahoo.com",
                            FullName = "Sam Bergstrom",
                            Password = "123123123",
                            Phone = "(234) 936-5664",
                            Position = "cook",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6252093a-e4d0-4719-bdda-99585f4090f9"),
                            Email = "Christian32@gmail.com",
                            FullName = "Christian Trantow",
                            Password = "123123123",
                            Phone = "633.736.7691 x064",
                            Position = "hr",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("fe77afb2-1ba3-4d9b-bbc8-9b67f6960386"),
                            Email = "Velma_Nader7@yahoo.com",
                            FullName = "Velma Nader",
                            Password = "123123123",
                            Phone = "1-917-602-9348",
                            Position = "security",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("9665e61f-c5b0-4eaf-b66f-3eaec571fbf6"),
                            Email = "Alexis.Ward52@hotmail.com",
                            FullName = "Alexis Ward",
                            Password = "123123123",
                            Phone = "967.422.9818 x51130",
                            Position = "cook",
                            Role = "Director"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OperationDescription")
                        .HasColumnType("int");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.HasOne("EasyBank.Models.Customer", "Customer")
                        .WithMany("Cards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.HasOne("EasyBank.Models.Card", null)
                        .WithMany("CardHistory")
                        .HasForeignKey("CardId");

                    b.HasOne("EasyBank.Models.Customer", null)
                        .WithMany("CustomerHistory")
                        .HasForeignKey("CustomerId");

                    b.HasOne("EasyBank.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Navigation("CardHistory");
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("CustomerHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
