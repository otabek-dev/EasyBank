// <auto-generated />
using System;
using EasyBank.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EasyBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230917151327_NewFakeDataWithPasswordHash")]
    partial class NewFakeDataWithPasswordHash
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d4b5fd0-d474-4f35-8918-ee52491c4e8e"),
                            CardNumber = "50386823330515310405",
                            CustomerId = new Guid("d2f00749-1aad-4bb7-bee5-e9953d591411"),
                            IsBlocked = false,
                            PinCode = "517"
                        },
                        new
                        {
                            Id = new Guid("3b09dc06-8ecd-453d-8942-87d3efb6c096"),
                            CardNumber = "6767-2072-8098-9832",
                            CustomerId = new Guid("9fb047f9-6092-43ed-ae12-9ec298b7659d"),
                            IsBlocked = false,
                            PinCode = "623"
                        },
                        new
                        {
                            Id = new Guid("2aafb2d1-25ef-439b-a279-8097425faf5f"),
                            CardNumber = "6304-2187-0667-3983",
                            CustomerId = new Guid("66e05fa3-8da3-4728-b294-4a1fb055e295"),
                            IsBlocked = false,
                            PinCode = "916"
                        },
                        new
                        {
                            Id = new Guid("9cc09b7d-f551-4817-a5e7-9a8ce26679fd"),
                            CardNumber = "5181-6122-7850-9882",
                            CustomerId = new Guid("6bcb4c45-4bf2-4ff4-b05e-2f17676a0a7a"),
                            IsBlocked = false,
                            PinCode = "312"
                        },
                        new
                        {
                            Id = new Guid("97024a54-5f42-4d00-ad2e-f2fdcfc924f2"),
                            CardNumber = "6771151385992933",
                            CustomerId = new Guid("d0853fd5-1fc3-4501-9df3-84d8e0c340dc"),
                            IsBlocked = false,
                            PinCode = "048"
                        },
                        new
                        {
                            Id = new Guid("0c944430-c705-4085-8585-8f530413a845"),
                            CardNumber = "6480-6288-6643-9345-6867",
                            CustomerId = new Guid("7eb4cf21-7f97-4ae7-84ea-dfa252ebbe85"),
                            IsBlocked = false,
                            PinCode = "446"
                        },
                        new
                        {
                            Id = new Guid("8445e59c-5cc8-4737-8b02-8cb6dedbc53f"),
                            CardNumber = "5020-7683-5012-6600",
                            CustomerId = new Guid("b884a108-f49a-4c3c-af83-31ef089f808b"),
                            IsBlocked = false,
                            PinCode = "967"
                        },
                        new
                        {
                            Id = new Guid("48eacbde-affc-486d-adca-7e3483d7f54d"),
                            CardNumber = "6709149098468062910",
                            CustomerId = new Guid("ab87b24b-0035-4dda-81ad-bc464e91f99a"),
                            IsBlocked = false,
                            PinCode = "576"
                        },
                        new
                        {
                            Id = new Guid("462a993c-c86c-407e-a946-771c6e2f8188"),
                            CardNumber = "4542097385378",
                            CustomerId = new Guid("e934a599-8c86-457b-8576-9a223786c500"),
                            IsBlocked = false,
                            PinCode = "816"
                        },
                        new
                        {
                            Id = new Guid("6aef9849-f7f4-4be1-bc43-7fe8eb97fea7"),
                            CardNumber = "4276378993580",
                            CustomerId = new Guid("fb0d1df2-1aca-457b-8ee4-e6bd9bab9b31"),
                            IsBlocked = false,
                            PinCode = "374"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f00749-1aad-4bb7-bee5-e9953d591411"),
                            Address = "(820) 866-2073",
                            FullName = "Sharon Feeney"
                        },
                        new
                        {
                            Id = new Guid("9fb047f9-6092-43ed-ae12-9ec298b7659d"),
                            Address = "(254) 539-1115",
                            FullName = "Cecelia Wuckert"
                        },
                        new
                        {
                            Id = new Guid("66e05fa3-8da3-4728-b294-4a1fb055e295"),
                            Address = "(476) 779-0065 x2009",
                            FullName = "Lori Keeling"
                        },
                        new
                        {
                            Id = new Guid("6bcb4c45-4bf2-4ff4-b05e-2f17676a0a7a"),
                            Address = "439.256.5821",
                            FullName = "Edmund White"
                        },
                        new
                        {
                            Id = new Guid("d0853fd5-1fc3-4501-9df3-84d8e0c340dc"),
                            Address = "(828) 739-5336",
                            FullName = "Oscar Turcotte"
                        },
                        new
                        {
                            Id = new Guid("7eb4cf21-7f97-4ae7-84ea-dfa252ebbe85"),
                            Address = "235.528.5297",
                            FullName = "Matthew Cremin"
                        },
                        new
                        {
                            Id = new Guid("b884a108-f49a-4c3c-af83-31ef089f808b"),
                            Address = "519.315.5130",
                            FullName = "Estelle Treutel"
                        },
                        new
                        {
                            Id = new Guid("ab87b24b-0035-4dda-81ad-bc464e91f99a"),
                            Address = "530-618-9292 x5350",
                            FullName = "Victor Gerlach"
                        },
                        new
                        {
                            Id = new Guid("e934a599-8c86-457b-8576-9a223786c500"),
                            Address = "543-508-9207 x902",
                            FullName = "Darrell Goldner"
                        },
                        new
                        {
                            Id = new Guid("fb0d1df2-1aca-457b-8ee4-e6bd9bab9b31"),
                            Address = "924-695-5321 x991",
                            FullName = "Clint Bergstrom"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6847f94-cfff-4a00-8662-b3007be9812f"),
                            Email = "otabek.pro@hotmail.com",
                            FullName = "Otabek Rustamov",
                            Password = "$2a$11$9fFRvCUDqFQOvjXE6h579eZpnk81mp9KkeHxOi96a0hTTeKviBhNy",
                            Phone = "(254) 390-2081 x747",
                            Position = "Developer",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("8ab94934-5169-4081-ae88-4794b089ad15"),
                            Email = "Eula44@gmail.com",
                            FullName = "Eula McKenzie",
                            Password = "$2a$11$oIxel7tV9Or8r60kPSk7MeKki11UzrzHzUgwCIRZ3k58FAkqnG7xa",
                            Phone = "(931) 248-6062",
                            Position = "cook",
                            Role = "Employee"
                        },
                        new
                        {
                            Id = new Guid("adce2acf-42c3-4b41-940a-9163eac458d7"),
                            Email = "Laverne.Moore@yahoo.com",
                            FullName = "Laverne Moore",
                            Password = "$2a$11$RnVwM9BnnSh3gF0f0lxD0.GeBGZiBUEfH5fJJ3JAuQPjqcw1IYlLC",
                            Phone = "443-926-8632",
                            Position = "developer",
                            Role = "Employee"
                        },
                        new
                        {
                            Id = new Guid("861c7985-2e67-4adb-8917-d44a16b5fe42"),
                            Email = "Cody54@yahoo.com",
                            FullName = "Cody Raynor",
                            Password = "$2a$11$VJIG5qW3U1D33NIdwtO0nOL9AHGN1hL93GYyyRvYoNFf4.uNE.cLW",
                            Phone = "1-279-340-2977",
                            Position = "developer",
                            Role = "Director"
                        },
                        new
                        {
                            Id = new Guid("ede3bd0a-4bec-4b02-9dcc-612a3d6b9fd9"),
                            Email = "Amy_VonRueden65@gmail.com",
                            FullName = "Amy VonRueden",
                            Password = "$2a$11$nZAD3SAkFythDU2OIWOlj.6mDLnHr3b1cjoF7pdNGXif9py2AN1q2",
                            Phone = "946-964-7547 x230",
                            Position = "hr",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("38c98d85-0a35-495d-b3c6-acc2250e4a10"),
                            Email = "Javier_Cormier12@yahoo.com",
                            FullName = "Javier Cormier",
                            Password = "$2a$11$p1o9KmakWD9IGZu97sh6UeD7gt93rx0hu3VtJo2R2.v5VfeHMqL.q",
                            Phone = "641.421.8462 x42201",
                            Position = "hr",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("OperationDescription")
                        .HasColumnType("integer");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("EasyBank.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("EasyBank.Models.Card", b =>
                {
                    b.HasOne("EasyBank.Models.Customer", "Customer")
                        .WithMany("Cards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EasyBank.Models.History", b =>
                {
                    b.HasOne("EasyBank.Models.Employee", "Employee")
                        .WithMany("History")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EasyBank.Models.Customer", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("EasyBank.Models.Employee", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
